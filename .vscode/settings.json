{
    "json.schemas": [
        {
            "fileMatch": ["server/**/auth.json"],
            "schema": {
                "properties": {
                    "openWeatherAPIKey": {
                        "description": "API Key to access the Open Weather API",
                        "type": "string"
                    },
                    "mapQuestAPIKey": {
                        "description": "API Key for Map Quest",
                        "type": "string"
                    },
                    "validClientIDs": {
                        "description": "An array of tokens that can be used to trigger api flows",
                        "type": ["array"]
                    }
                },
                "required": [
                    "openWeatherAPIKey",
                    "mapQuestAPIKey",
                    "validClientIDs"
                ],
                "additionalProperties": false
            }
        },
        {
            "fileMatch": [
                "server/**/config.json"
            ],
            "schema": {
                "properties": {
                    "useWeatherCaching": {
                        "description": "If true, only call pirate weather if it has been more than x minutes since the lsat request",
                        "type": "boolean"
                    },
                    "cacheMaxLifespanMinutes": {
                        "description": "The number of minutes a cache can be reused before a call to pirate weather is made",
                        "type": "number",
                        "minimum": 15
                    },
                    "port": {
                        "type": "number",
                        "description": "Port number the server runs on",
                        "minimum": 0,
                        "maximum": 65535
                    },
                    "maxCachedItems": {
                        "type": "number",
                        "description": "Limit on how many items can be in the cache, if the limit is met, items that should be cached just aren't",
                        "minimum": 0
                    }
                },
                "required": [
                    "useWeatherCaching",
                    "cacheMaxLifespanMinutes",
                    "port"
                ],
                "additionalProperties": false
            }
        },


        {
            "fileMatch": ["client/**/auth.json"],
            "schema": {
                "properties": {
                    "motherAuthToken": {
                        "description": "API Token to contact Mother",
                        "type": "string"
                    },
                    "isItRainingAuthToken": {
                        "description": "API Token to access Is It Raining",
                        "type": "string"
                    },
                    "speechServicesAuthToken": {
                        "description": "API Token to access Microsoft Speech Services",
                        "type": "string"
                    },
                    "speechServicesAuthRegion": {
                        "description": "Region the Microsoft Speech Service runs in",
                        "type": "string"
                    }
                },
                "required": [
                    "motherAuthToken",
                    "isItRainingAuthToken",
                    "speechServicesAuthToken",
                    "speechServicesAuthRegion"
                ],
                "additionalProperties": false
            }
        },
        {
            "fileMatch": [
                "client/**/config.json"
            ],
            "schema": {               
                "definitions": {
                    "dialogueLine": {
                        "type": "object",
                        "properties": {
                            "text": {
                                "description": "The words that should be spoken when this dialogue is selected",
                                "type": "string",
                                "default": "string"
                            },
                            "properties": {
                                "type": "array",
                                "description": "A keyword based array of descriptors about the conditions of activating this line",
                                "items": {
                                    "type": "string"
                                },
                                "uniqueItems": true,
                                "additionalItems": false
                            },
                            "fileName": {
                                "type": "string",
                                "default": "name_of_file.wav",
                                "description": "The name of the file that should be used when this line is generated by speech synth"
                            }
                        },
                        "required": [
                            "text",
                            "properties",
                            "fileName"
                        ]
                    }
                },

                "properties": {
                    "motherDownloadedConfigFilename": {
                        "description": "The name of the file containing stored properties from Mother",
                        "type": "string"
                    },
                    "fallbackSettings": {
                        "type": "object",
                        "description": "Fallback settings if Mother is unavilable",
                        "required": ["savePreviousAudioFiles", "location", "dialogue", "coldFeelThreshold_c", "windThreshold_kph", "sayFuturePrediction"],
                        "properties": {
                            "sayFuturePrediction": {
                                "description": "Whether or not the future prediction should be included in voice dialogue",
                                "type": "boolean",
                                "default": true
                            },
                            "savePreviousAudioFiles": {
                                "description": "Whether or not to save created audio files for reuse. If set to `false` after being true, existing audio files will be deleted",
                                "type": "boolean",
                                "default": true
                            },
                            "location": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "description": "Either `city` or `latlng`"
                                    },
                                    "value": {
                                        "type": ["string", "array"],
                                        "description": "Either the name of a searching city location string or lat,lng position (`city string` or [lat, long])"
                                    }
                                }
                            },
                            "dialogue": {
                                "type": "array",
                                "description": "array of dialoge objects, this can be configured by Mother",
                                "uniqueItems": true,
                                "items": { "$ref": "#/definitions/dialogueLine"},
                                "default": [""],
                                "additionalItems": false
                            },
                            "dialogueSpeed": {
                                "type": "number",
                                "minimum": -1,
                                "maximum": 1,
                                "description": "Pace of the spoken speech when generated (in percent) relative to 0 (normal speed).",
                                "default": 0
                            },
                            "coldFeelThreshold_c": {
                                "type": "number",
                                "description": "Cut off for when it is considered cold",
                                "default": 0
                            },
                            "windThreshold_kph": {
                                "type": "number",
                                "description": "Cut off for when it is considered windy",
                                "minimum": 0,
                                "default": 35
                            }
                        }
                    },
                    "motherCheckInInterval_ms": {
                        "description": "How long should the client wait between checkins and downloads from Mother (milliseconds)",
                        "type": "number",
                        "minimum": 15000,
                    },
                    "motherDownloadAlsoChecksIn": {
                        "description": "If on the Mother server, downloading the config also counts as checking in",
                        "type": "boolean"
                    }
                },
                "required": [
                    "motherDownloadedConfigFilename",
                    "fallbackSettings",
                    "motherCheckInInterval_ms",
                    "motherDownloadAlsoChecksIn",
                    "gpioButtonHeader",
                    "gpioVolumeHeader",
                ],
                "additionalProperties": false
            }
        }
    ],
    "cSpell.words": [
        "Behaviour",
        "latlng"
    ]
}